---
name: CI
on:
  push:
    paths:
    - '**'
    - '!**.md'
    - '!doc/**'
    - '!**.png'
  pull_request:
  workflow_dispatch:
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get tag name, if specified
      run: if grep -q "/tags/" <<< "${GITHUB_REF}"; then echo ::set-output name=tag::${GITHUB_REF:10}; fi
      id: get_tag
    - name: Get branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: get_branch
    - name: Lint the release
      uses: docker://replicated/vendor-cli:latest
      with:
        args: release lint --yaml-dir=manifests
      env:
        REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
        REPLICATED_APP: ${{ secrets.REPLICATED_APP }}
    - name: Create a release on Channel associated with the branch
      uses: docker://replicated/vendor-cli:latest
      with:
        args: release create --auto -y
      env:
        REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
        REPLICATED_APP: ${{ secrets.REPLICATED_APP }}
        GITHUB_BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
        GITHUB_TAG_NAME: ${{ steps.get_tag.outputs.tag }}
    - name: Release Kubernetes Installer
      uses: docker://replicated/vendor-cli:latest
      with:
        args: installer create --auto -y
      env:
        REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
        REPLICATED_APP: ${{ secrets.REPLICATED_APP }}
        GITHUB_BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
        GITHUB_TAG_NAME: ${{ steps.get_tag.outputs.tag }}
  deploy-embedded:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Deploy embedded cluster
      run: |
        INSTANCE=ada-cicd-demo-testenvironment gcloud compute instances create $INSTANCE \
        --boot-disk-size=20GB \
        --image-project centos-cloud \
        --image-family centos-7 \
        --machine-type e2-medium \
        && gcloud compute instances delete $INSTANCE

  deploy-existing:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info
